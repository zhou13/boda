# NOTE: see also the file obj_list (in the same directory as this file)

# NOTE_DETAILS: the build system for this project consists of this makefile, the python script
# pysrc/prebuild.py, and the file obj_list read by the python scripts. running make on this makefile is the
# correct top-level build command. however, note that configuring the project may require edits to this
# makefile, the obj_list file, and/or the python build scripts.

$(info py_prebuild_rm_okay: $(shell rm -f prebuild.okay ))
# run python build code: generates various code, object list file, and dependency list file
# FIXME: make seems to somtimes like to run prebuild.py multiple times -- which is not great, but okay.
$(info py_prebuild_hook:  $(shell python ../pysrc/prebuild.py )) # reads obj_list; creates an empty prebuild.okay file on success
ifeq ($(shell test -f prebuild.okay ; echo $$? ),1)
$(error "prebuild.okay file does not exist. assuming prebuild.py failed, aborting make")
endif
# --- makefile header section begins --- 
TARGET := ../lib/boda
#LIBTARGET=../lib/libboda.so # currently unused/broken for boda, enabling may be usefull for pre-debugging/testing shared-lib building 
# basic setup; FIXME: move (some of this) to obj_list?
CPP := /scratch/android-stc/bin/aarch64-linux-android-g++ 
CPPFLAGS := -Wall -O3 -g -std=c++0x -fPIC -fopenmp -Wall -fPIE -pie -I/scratch/moskewcz/android/src/boost_1_60_0 -I/scratch/moskewcz/android/adreno/include -DANDROID -I/scratch/moskewcz/android/src/sparsehash-sparsehash-2.0.3/src
LDFLAGS := -lgnustl_shared -lz -fopenmp -fPIE -pie \
	-L/scratch/moskewcz/android/src/boost_1_60_0/stage/lib \
	-lboost_system -lboost_filesystem -lboost_iostreams -lboost_regex -lboost_program_options \
	-L/scratch/moskewcz/android/adreno/lib64 \
	-lgsl -lc++ -llog -lutils -lbacktrace -lbase -lunwind -lc -lui -lhardware -lsync -lCB -lcutils -lm -lc -ldl

# --- makefile header section ends --- 
# --- makefile generic c++ compilation, linking, and dependency handling rules and reciepies section begins --- 
# generally, there is no need to alter the makefile below this line
all : $(TARGET) # $(LIBTARGET)
include dependencies.make # generated by prebuild.py
VPATH := ../src ../src/gen ../src/ext
OBJS := $(shell cat gen_objs)
.SUFFIXES:
%.o : %.cc
	$(CPP) $(CPPFLAGS) -MMD -c $<
%.d : %.cc
	rm -f $(@:.d=.o)
%.o : %.cpp
	$(CPP) $(CPPFLAGS) -MMD -c $<
%.d : %.cpp
	rm -f $(@:.d=.o)
DEPENDENCIES = $(OBJS:.o=.d)
$(TARGET): $(OBJS) obj_list
	$(CPP) $(CPPFLAGS) -o $(TARGET) $(OBJS) $(LDFLAGS)
$(LIBTARGET): $(OBJS)
	$(CPP) -shared $(CPPFLAGS) -o $(LIBTARGET) $(OBJS) $(LDFLAGS)
.PHONY : clean
clean:
	-rm -f $(TARGET) $(OBJS) $(DEPENDENCIES)
include $(DEPENDENCIES) # generated by compiler via -MMD option
include make_make_ignore_missing_headers_in_d_files.make # generated by prebuild.py

